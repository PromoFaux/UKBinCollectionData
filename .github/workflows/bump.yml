name: Release - Bump Version

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - "wiki/**"
      - "**/*.md"
      - ".github/workflows/**"
  workflow_dispatch: {}

jobs:
  bump:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency: bump

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Cache Commitizen
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-commitizen-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-commitizen-

      - name: Install Commitizen
        run: pip install commitizen

      - name: Configure git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump version and create tag
        id: bump
        run: |
          # Check if there are commits to bump
          if cz bump --yes --changelog --dry-run 2>&1 | grep -q "No commits found"; then
            echo "No version bump needed - no conventional commits since last release"
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          cz bump --yes --changelog
          echo "version=$(cz version --project)" >> $GITHUB_OUTPUT
          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Push changes and tags
        if: steps.bump.outputs.skip != 'true'
        run: |
          git push origin master
          git push origin --tags

      - name: Create workflow summary
        if: always()
        run: |
          echo "## Bump Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.bump.outputs.skip }}" == "true" ]; then
            echo "- **Status**: ⏭️ Skipped (no conventional commits)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
            echo "- **New Version**: ${{ steps.bump.outputs.version }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Tag Created**: ${{ steps.bump.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          fi
